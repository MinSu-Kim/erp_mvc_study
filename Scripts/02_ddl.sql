-- 접속자 확인
SELECT USER FROM DUAL;

DROP TABLE EMPLOYEE;
DROP TABLE DEPARTMENT;
DROP TABLE TITLE;

-- DEPARTMENT 테이블 생성
CREATE TABLE DEPARTMENT (
    DEPT_NO     NUMBER(2),
    DEPT_NAME   VARCHAR2(20),
    FLOOR       NUMBER(2) DEFAULT 2,
    CONSTRAINT  DEPARTMENT_DEPTNO_PK       PRIMARY KEY (DEPT_NO),
    CONSTRAINT  DEPARTMENT_DEPTNAME_UK     UNIQUE(DEPT_NAME),
    CONSTRAINT  DEPARTMENT_DEPTNAME_NN     CHECK(DEPT_NAME IS NOT NULL)
);

-- TITLE 테이블 생성
CREATE TABLE TITLE (
    TITLE_NO   NUMBER(2)    CONSTRAINT TITLE_TITLENO_PK   PRIMARY KEY,
    TITLE_NAME VARCHAR2(10) CONSTRAINT TITLE_TITLENAME_NN NOT NULL CONSTRAINT TITLE_TITLENAME_UK UNIQUE
);

-- EMPLOYEE 테이블 생성
CREATE TABLE EMPLOYEE (
    EMP_NO   NUMBER,
    EMP_NAME VARCHAR2(20) NOT NULL,
    TNO      NUMBER,
    MANAGER  NUMBER,
    SALARY   NUMBER,
    DNO      NUMBER,
    EMAIL    varchar2(60) NOT NULL,
    PASSWD   varchar2(60) NOT NULL,
    REGDATE  DATE DEFAULT SYSDATE,
    TEL      char(13),
    CONSTRAINT EMPLOYEE_EMPNO_PK   PRIMARY KEY (EMP_NO),
    CONSTRAINT EMPLOYEE_TNO_FK     FOREIGN KEY (TNO)     REFERENCES TITLE(TITLE_NO) ON DELETE SET NULL, 
    CONSTRAINT EMPLOYEE_MANAGER_FK FOREIGN KEY (MANAGER) REFERENCES EMPLOYEE(EMP_NO),
    CONSTRAINT EMPLOYEE_SALARY_CK  CHECK (SALARY < 6000000),
    CONSTRAINT EMPLOYEE_DNO_FK     FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DEPT_NO) ON DELETE CASCADE
);


--------------------------------------------------------------
CREATE TABLE BOARD(
    NUM    NUMBER NOT NULL PRIMARY KEY, -- 글번호
    WRITER VARCHAR2(50) NOT NULL,       -- 글쓴이
    SUBJECT VARCHAR2(50) NOT NULL,      -- 글제목
    PASSWD VARCHAR2(60) NOT NULL,       -- 글의 비밀번호
    REGDATE DATE NOT NULL,              -- 글 쓴 날짜
    READCOUNT NUMBER DEFAULT 0,         -- 글 조회수
    REF NUMBER NOT NULL,                -- 글을 그룹화하기위한 필드 제목글과 그에 딸린 답변글이 그룹화
    RE_STEP NUMBER NOT NULL,            -- 제목글과 답변글의 순서를 정리하기 위한 필드
    RE_LEVEL NUMBER NOT  NULL,          -- 글의 레벨을 저장하는 필드
    CONTENT CLOB NOT NULL,              -- 글내용
    IP VARCHAR2(30) NOT NULL            -- 글쓴이의 IP주소
);

DROP SEQUENCE AUTO_BOARD_SEQ;

CREATE SEQUENCE AUTO_BOARD_SEQ
    START WITH 1
    INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRI_BOARD_AUTOSEQ
    BEFORE INSERT 
    ON BOARD
    FOR EACH ROW 
BEGIN 
    IF INSERTING AND :NEW.BNO IS NULL THEN 
        SELECT AUTO_BOARD_SEQ.NEXTVAL INTO :NEW.BNO FROM DUAL;
    END IF;
END;



